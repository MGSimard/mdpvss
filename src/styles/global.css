:root {
  --coreFont: "Rajdhani", -apple-system, BlinkMacSystemFont, avenir next, avenir, segoe ui, helvetica neue, helvetica,
    Cantarell, Ubuntu, roboto, noto, arial, sans-serif;
  --secondaryFont: "Orbitron", Menlo, Consolas, Monaco, Liberation Mono, Lucida Console, monospace;
  --monoFont: "JetBrains Mono", Menlo, Consolas, Monaco, Liberation Mono, Lucida Console, monospace;

  /* DARK FALLBACK */
  --clrPrimary: oklch(0.6565 0.2298 24.01);
  --clrSecondary: oklch(0.8965 0.1273 200.71);
  --clrBg: oklch(0.1685 0.0187 284.21);

  --clrHeading: var(--clrSecondary);
  --clrText: var(--clrPrimary);
  --clrTextMuted: oklch(0.4701 0.0112 285.96);

  /* DERIVATIVES */
  --clrEleBg: oklch(from var(--clrBg) l c h / 0.8);

  --clrEleBorderIdle: oklch(from var(--clrPrimary) l c h / 0.3);
  --clrEleBorderHover: var(--clrPrimary);
  --clrEleBorderEnabled: var(--clrPrimary);
  --clrEleBorderClicked: var(--clrPrimary);

  --clrEleTrimIdle: oklch(from var(--clrPrimary) l c h / 0.1);
  --clrEleTrimHover: oklch(from var(--clrPrimary) l c h / 0.4);

  --clrEleOverlayHover: oklch(from var(--clrPrimary) l c h / 0.1);
  --clrEleOverlayEnabled: oklch(from var(--clrPrimary) l c h / 0.4);
  --clrEleOverlayClicked: oklch(from var(--clrPrimary) l c h / 0.7);
}
[data-theme="light"] {
  --clrPrimary: oklch(0.3085 0.1548 275.01);
  --clrSecondary: var(--clrPrimary);
  --clrBg: oklch(0.9098 0 0);

  --clrHeading: var(--clrSecondary);
  --clrText: var(--clrPrimary);
  --clrTextMuted: oklch(0.4701 0.0112 285.96);
}
::selection {
  /* Todo find good color */
  background: var(--clrEleOverlayEnabled);
}
/* CORE */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
html {
  font-family: var(--coreFont);
  font-size: 62.5%;
  color: var(--clrText);
  background-color: var(--clrBg);
}
body {
  font-size: 1.6rem;
}
#root {
  display: flex;
  flex-direction: column;
  min-height: 100dvh;
  padding: 0 1.6rem;
}
header,
main {
  padding: 1.6rem 0;
}
header {
  flex-shrink: 0;
  font-weight: 700;
  text-align: center;
  opacity: 0.3;
}
main {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}
/**/
/* NORMALIZE*/
button {
  all: unset;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: var(--coreFont);
  font-weight: 500;
}
a {
  color: inherit;
}
img {
  display: block;
  max-width: 100%;
}
pre,
code {
  font-family: var(--monoFont);
  font-weight: 200;
}
table {
  border-collapse: collapse;
}
th,
td {
  padding: 0.2em 0.5em;
  border: 1px solid var(--clrPrimary);
}
/**/
/* HELPERS */
.sr-only {
  position: absolute;
  left: -9999;
  top: auto;
  width: 1px;
  height: 1px;
  overflow: hidden;
}
.hide {
  display: none;
}
/**/
/* TOOLBAR */
#toolbar {
  position: fixed;
  top: 50%;
  left: 1rem;
  width: fit-content;
  padding: 1px;
  background-color: var(--clrEleBorderIdle);
  transform: translateY(-50%);
  z-index: 1000;
  clip-path: polygon(
    0 0.6rem,
    0.2rem 0.4rem,
    1.6rem 0.4rem,
    2rem 0,
    100% 0,
    100% calc(100% - 2rem),
    calc(100% - 2rem) 100%,
    1rem 100%,
    0 calc(100% - 1rem)
  );
  transition: clip-path 0.2s ease-in-out;
  &:hover,
  &:has(:focus-visible) {
    background-color: var(--clrEleBorderHover);
  }
}
#toolbar[data-open="false"] {
  clip-path: polygon(
    0 0.6rem,
    0.2rem 0.4rem,
    1.6rem 0.4rem,
    2rem 0,
    100% 0,
    100% 100%,
    99% 100%,
    1rem 100%,
    0 calc(100% - 1rem)
  );
}
#toolbar-inner {
  display: flex;
  gap: 0.2rem;
  background-color: var(--clrBg);
  clip-path: polygon(
    0 0.6rem,
    0.2rem 0.4rem,
    1.6rem 0.4rem,
    2rem 0,
    100% 0,
    100% calc(100% - 2rem),
    calc(100% - 2rem) 100%,
    1rem 100%,
    0 calc(100% - 1rem)
  );
  transition: clip-path 0.2s ease-in-out;
}
#toolbar[data-open="false"] #toolbar-inner {
  clip-path: polygon(
    0 0.6rem,
    0.2rem 0.4rem,
    1.6rem 0.4rem,
    2rem 0,
    100% 0,
    100% 100%,
    99% 100%,
    1rem 100%,
    0 calc(100% - 1rem)
  );
}
#toolbar-trim {
  flex-shrink: 0;
  width: 3rem;
  background: var(--clrEleBorderIdle);
  padding-right: 1px;
  clip-path: polygon(
    0 0,
    100% 0,
    100% 3rem,
    calc(100% - 0.3rem) 3.3rem,
    calc(100% - 0.3rem) calc(100% - 3rem),
    100% calc(100% - 2.7rem),
    100% 100%,
    0 100%
  );
}
#toolbar-trim-inner {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  background: var(--clrBg);
  clip-path: polygon(
    0 0,
    100% 0,
    100% 2.95rem,
    calc(100% - 0.3rem) 3.25rem,
    calc(100% - 0.3rem) calc(100% - 2.95rem),
    100% calc(100% - 2.65rem),
    100% 100%,
    0 100%
  );
  &::before {
    content: "";
    position: absolute;
    inset: 0;
    background: var(--clrEleTrimIdle);
  }
}
#toolbar:hover #toolbar-trim-inner::before,
#toolbar:has(:focus-visible) #toolbar-trim-inner::before {
  background: var(--clrEleTrimHover);
}
#toolbar-control {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2rem;
  height: 100%;
  margin-left: -0.2rem;
  z-index: 1;
  cursor: pointer;
  &:hover,
  &:focus-visible {
    color: var(--clrSecondary);
  }
}
#toolbar-control svg {
  width: 2rem;
  height: 2rem;
}
#toolbar-content {
  display: grid;
  grid-template-rows: 1fr;
  grid-template-columns: 1fr;
  overflow: hidden;
  transition: all 0.2s ease-in-out;
  opacity: 1;
  &[inert] {
    grid-template-rows: 0fr;
    grid-template-columns: 0fr;
    opacity: 0;
    > div {
      padding: 1.6rem 0;
    }
  }
}
#toolbar-content > div {
  display: flex;
  flex-direction: column;
  gap: 1.6rem;
  padding: 1.6rem;
  min-height: 0;
  min-width: 0;
  border-left: 1px solid var(--clrEleBorderIdle);
  transition: padding 0.2s ease-in-out;
}
.setting {
  position: relative;
  padding: 1px;
  font-weight: 500;
  line-height: 1;
  text-align: center;
  color: var(--clrPrimary);
  text-transform: uppercase;
  background: var(--clrEleBorderIdle);
  cursor: pointer;
  white-space: nowrap;
  clip-path: polygon(
    0 0,
    2.4rem 0,
    2.6rem 0.2rem,
    100% 0.2rem,
    100% calc(100% - 0.4rem),
    calc(100% - 0.4rem) 100%,
    0 100%
  );
  &:hover,
  &:focus-visible {
    background: var(--clrEleBorderHover);
  }
  &:active {
    color: var(--clrBg);
  }
  &[aria-checked="true"] {
    background: var(--clrEleBorderEnabled);
  }
}
.setting > span {
  position: relative;
  display: block;
  padding: 0.8rem 3.5rem 0.4rem 4rem;
  background: var(--clrBg);
  clip-path: polygon(
    0 0,
    2.25rem 0,
    2.45rem 0.2rem,
    100% 0.2rem,
    100% calc(100% - 0.35rem),
    calc(100% - 0.35rem) 100%,
    0 100%
  );
  &::before {
    content: "";
    position: absolute;
    inset: 0;
    pointer-events: none;
    z-index: -1;
  }
}
.setting:hover > span::before,
.setting:focus-visible > span::before {
  content: "";
  position: absolute;
  inset: 0;
  background: var(--clrEleOverlayHover);
  z-index: -1;
}
.setting:active > span::before {
  background: var(--clrEleOverlayClicked);
}
.setting[aria-checked="true"] > span::before {
  background: var(--clrEleOverlayEnabled);
}
.setting svg {
  position: absolute;
  top: 50%;
  left: 0.8rem;
  height: 2rem;
  width: 2rem;
  transform: translateY(-50%);
}
.setting .padding-value {
  position: absolute;
  bottom: 0.4rem;
  right: 0.8rem;
  font-size: 1.4rem;
  color: var(--clrPrimary);
  transition: color 0.2s ease-in-out;
  &.highlight {
    color: var(--clrSecondary);
    transition: none;
  }
}
/**/
/* RESIZABLE CANVAS WRAPPER */
#resizable-canvas-wrapper {
  position: relative;
}
#handle-left,
#handle-right {
  position: absolute;
  top: 0;
  width: 1rem;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--clrTextMuted);
  cursor: ew-resize;
  z-index: 10;
  outline: none;
  &:hover,
  &:focus-visible {
    background: var(--clrEleOverlayHover);
  }
}
#handle-left {
  left: 0;
  transform: translateX(-50%);
}
#handle-right {
  right: 0;
  transform: translateX(50%);
}
#width-display {
  position: absolute;
  left: 0;
  right: 0;
  bottom: -2rem;
  text-align: center;
  color: var(--clrTextMuted);
  font-size: 1.4rem;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.2s ease-in-out;
  &.visible {
    opacity: 1;
    transition: none;
  }
}
/**/
/* CANVAS */
#canvas {
  width: 100%;
  background: var(--clrBg);
  background: radial-gradient(circle at center -50%, oklch(from var(--clrPrimary) l c h / 0.2), var(--clrBg) 100%);
  background-repeat: no-repeat;
  transition: padding 0.2s ease-in-out;
  border: 1px solid var(--clrEleBorderIdle);
  &.bg-transparent {
    background: transparent;
  }
}
#card {
  height: 100%;
  padding: 1px;
  background-color: var(--clrEleBorderIdle);
  clip-path: polygon(
    0 0.6rem,
    0.2rem 0.4rem,
    1.6rem 0.4rem,
    2rem 0,
    100% 0,
    100% calc(100% - 2rem),
    calc(100% - 2rem) 100%,
    1rem 100%,
    0 calc(100% - 1rem)
  );
}
#card-inner {
  display: flex;
  gap: 0.2rem;
  height: 100%;
  background-color: var(--clrBg);
  clip-path: polygon(
    0 0.6rem,
    0.2rem 0.4rem,
    1.6rem 0.4rem,
    2rem 0,
    100% 0,
    100% calc(100% - 2rem),
    calc(100% - 2rem) 100%,
    1rem 100%,
    0 calc(100% - 1rem)
  );
}
#card-trim {
  flex-shrink: 0;
  width: 4rem;
  background: var(--clrEleBorderIdle);
  padding-right: 1px;
  clip-path: polygon(
    0 0,
    100% 0,
    100% 3rem,
    calc(100% - 0.3rem) 3.3rem,
    calc(100% - 0.3rem) calc(100% - 3rem),
    100% calc(100% - 2.7rem),
    100% 100%,
    0 100%
  );
}
#card-trim-inner {
  position: relative;
  width: 100%;
  height: 100%;
  background: var(--clrBg);
  clip-path: polygon(
    0 0,
    100% 0,
    100% 2.95rem,
    calc(100% - 0.3rem) 3.25rem,
    calc(100% - 0.3rem) calc(100% - 2.95rem),
    100% calc(100% - 2.65rem),
    100% 100%,
    0 100%
  );
  &::before {
    content: "";
    position: absolute;
    inset: 0;
    background: var(--clrEleTrimIdle);
  }
  &::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 0;
    width: 1rem;
    height: 0.2rem;
    border-top: 1px solid var(--clrEleBorderIdle);
    border-right: 1px solid var(--clrEleBorderIdle);
    border-bottom: 1px solid var(--clrEleBorderIdle);
    transform: translateY(-50%);
  }
}
#card-content {
  flex-grow: 1;
  display: flex;
  padding: 1.6rem;
  border-left: 1px solid var(--clrEleBorderIdle);
}
#card-editable {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  gap: 1.6rem;
}
#file-name {
  all: unset;
  color: var(--clrTextMuted);
  &::placeholder {
    color: var(--clrTextMuted);
  }
}
#markdown-raw {
  position: relative;
}
#markdown-raw textarea {
  all: unset;
  resize: none;
  position: absolute;
  top: 0;
  left: 0;
  color: transparent;
  -webkit-text-fill-color: transparent;
  text-size-adjust: none;
  caret-color: var(--clrText);
  overflow: hidden;
  &::selection {
    color: transparent;
  }
}
.markdown-raw-highlighted {
  pointer-events: none;
}
/* https://github.com/shikijs/shiki/issues/3#issuecomment-830564854 */
#markdown-raw .markdown-raw-highlighted code {
  counter-reset: step;
  counter-increment: step 0;
}
#markdown-raw .markdown-raw-highlighted code .line {
  position: relative;
}
#markdown-raw .markdown-raw-highlighted code .line::before {
  content: counter(step);
  counter-increment: step;
  position: absolute;
  left: -5.5rem;
  text-align: right;
  color: var(--clrTextMuted);
  width: 3ch;
  overflow: hidden;
}
.markdown-raw-highlighted.hide-numbers code .line::before {
  display: none;
}
.markdown-raw-highlighted::selection {
  color: transparent;
  user-select: none;
  pointer-events: none;
  touch-action: none;
}
#markdown-raw textarea,
.markdown-raw-highlighted {
  width: 100%;
  min-height: 1lh;
  height: 100%;
  font-family: var(--monoFont);
  font-weight: 200;
  font-size: 1.6rem;
}
#markdown-raw textarea,
.markdown-raw-highlighted,
pre,
code,
.line,
.line span {
  white-space: pre-wrap;
  word-break: break-all;
  overflow-wrap: anywhere;
}

/* RENDERED MARKDOWN */
#markdown-rendered {
  min-height: 1lh;
}
#markdown-rendered h1,
#markdown-rendered h2,
#markdown-rendered h3,
#markdown-rendered h4,
#markdown-rendered h5,
#markdown-rendered h6 {
  color: var(--clrSecondary);
}
#markdown-rendered ul,
#markdown-rendered ol {
  margin-left: 1em;
}
#markdown-rendered li input[type="checkbox"] {
  vertical-align: middle;
}
#markdown-rendered pre,
#markdown-rendered code {
  font-family: var(--monoFont);
  font-weight: 200;
}
#markdown-rendered blockquote {
  padding: 0.5em;
  border-left: 0.5em solid var(--clrEleBorderIdle);
  background-color: var(--clrEleOverlayHover);
  font-style: italic;
}
#markdown-rendered table {
  border-collapse: collapse;
}
#markdown-rendered th,
#markdown-rendered td {
  padding: 0.2em 0.5em;
  border: 1px solid var(--clrPrimary);
}
#markdown-rendered > *:not(hr) {
  margin-bottom: 1rem;
}
#markdown-rendered hr {
  margin: 1em 0;
  border-color: var(--clrEleBorderIdle);
}
#markdown-rendered > pre {
  background-color: var(--clrEleOverlayHover);
  padding: 1em;
}
#markdown-rendered p > code {
  background-color: var(--clrEleOverlayHover);
}
